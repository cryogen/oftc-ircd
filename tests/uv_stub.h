/* OPMOCK2 GENERATED CODE - DO NOT MODIFY */
#ifndef _UV_STUB_H
#define _UV_STUB_H

#include <uv.h>
#include "opmock.h"

#ifdef __cplusplus
extern "C" {
#endif

void uv_version_ExpectAndReturn(unsigned int to_return);
void uv_version_MockReset();
typedef unsigned int (* OPMOCK_uv_version_CALLBACK)(int calls);
void uv_version_MockWithCallback(OPMOCK_uv_version_CALLBACK callback);
void uv_version_VerifyMock();
void uv_version_string_ExpectAndReturn(const char * to_return);
void uv_version_string_MockReset();
typedef const char * (* OPMOCK_uv_version_string_CALLBACK)(int calls);
void uv_version_string_MockWithCallback(OPMOCK_uv_version_string_CALLBACK callback);
void uv_version_string_VerifyMock();
void uv_default_loop_ExpectAndReturn(uv_loop_t * to_return);
void uv_default_loop_MockReset();
typedef uv_loop_t * (* OPMOCK_uv_default_loop_CALLBACK)(int calls);
void uv_default_loop_MockWithCallback(OPMOCK_uv_default_loop_CALLBACK callback);
void uv_default_loop_VerifyMock();
void uv_loop_init_ExpectAndReturn(uv_loop_t * loop, int to_return, OPMOCK_MATCHER match_loop);
void uv_loop_init_MockReset();
typedef int (* OPMOCK_uv_loop_init_CALLBACK)(uv_loop_t * loop, int calls);
void uv_loop_init_MockWithCallback(OPMOCK_uv_loop_init_CALLBACK callback);
void uv_loop_init_VerifyMock();
void uv_loop_close_ExpectAndReturn(uv_loop_t * loop, int to_return, OPMOCK_MATCHER match_loop);
void uv_loop_close_MockReset();
typedef int (* OPMOCK_uv_loop_close_CALLBACK)(uv_loop_t * loop, int calls);
void uv_loop_close_MockWithCallback(OPMOCK_uv_loop_close_CALLBACK callback);
void uv_loop_close_VerifyMock();
void uv_loop_new_ExpectAndReturn(uv_loop_t * to_return);
void uv_loop_new_MockReset();
typedef uv_loop_t * (* OPMOCK_uv_loop_new_CALLBACK)(int calls);
void uv_loop_new_MockWithCallback(OPMOCK_uv_loop_new_CALLBACK callback);
void uv_loop_new_VerifyMock();
void uv_loop_delete_ExpectAndReturn(uv_loop_t * arg1, OPMOCK_MATCHER match_arg1);
void uv_loop_delete_MockReset();
typedef void (* OPMOCK_uv_loop_delete_CALLBACK)(uv_loop_t * arg1, int calls);
void uv_loop_delete_MockWithCallback(OPMOCK_uv_loop_delete_CALLBACK callback);
void uv_loop_delete_VerifyMock();
void uv_loop_size_ExpectAndReturn(size_t to_return);
void uv_loop_size_MockReset();
typedef size_t (* OPMOCK_uv_loop_size_CALLBACK)(int calls);
void uv_loop_size_MockWithCallback(OPMOCK_uv_loop_size_CALLBACK callback);
void uv_loop_size_VerifyMock();
void uv_loop_alive_ExpectAndReturn(const uv_loop_t * loop, int to_return, OPMOCK_MATCHER match_loop);
void uv_loop_alive_MockReset();
typedef int (* OPMOCK_uv_loop_alive_CALLBACK)(const uv_loop_t * loop, int calls);
void uv_loop_alive_MockWithCallback(OPMOCK_uv_loop_alive_CALLBACK callback);
void uv_loop_alive_VerifyMock();
void uv_run_ExpectAndReturn(uv_loop_t * arg1, uv_run_mode mode, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_mode);
void uv_run_MockReset();
typedef int (* OPMOCK_uv_run_CALLBACK)(uv_loop_t * arg1, uv_run_mode mode, int calls);
void uv_run_MockWithCallback(OPMOCK_uv_run_CALLBACK callback);
void uv_run_VerifyMock();
void uv_stop_ExpectAndReturn(uv_loop_t * arg1, OPMOCK_MATCHER match_arg1);
void uv_stop_MockReset();
typedef void (* OPMOCK_uv_stop_CALLBACK)(uv_loop_t * arg1, int calls);
void uv_stop_MockWithCallback(OPMOCK_uv_stop_CALLBACK callback);
void uv_stop_VerifyMock();
void uv_ref_ExpectAndReturn(uv_handle_t * arg1, OPMOCK_MATCHER match_arg1);
void uv_ref_MockReset();
typedef void (* OPMOCK_uv_ref_CALLBACK)(uv_handle_t * arg1, int calls);
void uv_ref_MockWithCallback(OPMOCK_uv_ref_CALLBACK callback);
void uv_ref_VerifyMock();
void uv_unref_ExpectAndReturn(uv_handle_t * arg1, OPMOCK_MATCHER match_arg1);
void uv_unref_MockReset();
typedef void (* OPMOCK_uv_unref_CALLBACK)(uv_handle_t * arg1, int calls);
void uv_unref_MockWithCallback(OPMOCK_uv_unref_CALLBACK callback);
void uv_unref_VerifyMock();
void uv_has_ref_ExpectAndReturn(const uv_handle_t * arg1, int to_return, OPMOCK_MATCHER match_arg1);
void uv_has_ref_MockReset();
typedef int (* OPMOCK_uv_has_ref_CALLBACK)(const uv_handle_t * arg1, int calls);
void uv_has_ref_MockWithCallback(OPMOCK_uv_has_ref_CALLBACK callback);
void uv_has_ref_VerifyMock();
void uv_update_time_ExpectAndReturn(uv_loop_t * arg1, OPMOCK_MATCHER match_arg1);
void uv_update_time_MockReset();
typedef void (* OPMOCK_uv_update_time_CALLBACK)(uv_loop_t * arg1, int calls);
void uv_update_time_MockWithCallback(OPMOCK_uv_update_time_CALLBACK callback);
void uv_update_time_VerifyMock();
void uv_now_ExpectAndReturn(const uv_loop_t * arg1, uint64_t to_return, OPMOCK_MATCHER match_arg1);
void uv_now_MockReset();
typedef uint64_t (* OPMOCK_uv_now_CALLBACK)(const uv_loop_t * arg1, int calls);
void uv_now_MockWithCallback(OPMOCK_uv_now_CALLBACK callback);
void uv_now_VerifyMock();
void uv_backend_fd_ExpectAndReturn(const uv_loop_t * arg1, int to_return, OPMOCK_MATCHER match_arg1);
void uv_backend_fd_MockReset();
typedef int (* OPMOCK_uv_backend_fd_CALLBACK)(const uv_loop_t * arg1, int calls);
void uv_backend_fd_MockWithCallback(OPMOCK_uv_backend_fd_CALLBACK callback);
void uv_backend_fd_VerifyMock();
void uv_backend_timeout_ExpectAndReturn(const uv_loop_t * arg1, int to_return, OPMOCK_MATCHER match_arg1);
void uv_backend_timeout_MockReset();
typedef int (* OPMOCK_uv_backend_timeout_CALLBACK)(const uv_loop_t * arg1, int calls);
void uv_backend_timeout_MockWithCallback(OPMOCK_uv_backend_timeout_CALLBACK callback);
void uv_backend_timeout_VerifyMock();
void uv_strerror_ExpectAndReturn(int err, const char * to_return, OPMOCK_MATCHER match_err);
void uv_strerror_MockReset();
typedef const char * (* OPMOCK_uv_strerror_CALLBACK)(int err, int calls);
void uv_strerror_MockWithCallback(OPMOCK_uv_strerror_CALLBACK callback);
void uv_strerror_VerifyMock();
void uv_err_name_ExpectAndReturn(int err, const char * to_return, OPMOCK_MATCHER match_err);
void uv_err_name_MockReset();
typedef const char * (* OPMOCK_uv_err_name_CALLBACK)(int err, int calls);
void uv_err_name_MockWithCallback(OPMOCK_uv_err_name_CALLBACK callback);
void uv_err_name_VerifyMock();
void uv_shutdown_ExpectAndReturn(uv_shutdown_t * req, uv_stream_t * handle, uv_shutdown_cb cb, int to_return, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_cb);
void uv_shutdown_MockReset();
typedef int (* OPMOCK_uv_shutdown_CALLBACK)(uv_shutdown_t * req, uv_stream_t * handle, uv_shutdown_cb cb, int calls);
void uv_shutdown_MockWithCallback(OPMOCK_uv_shutdown_CALLBACK callback);
void uv_shutdown_VerifyMock();
void uv_handle_size_ExpectAndReturn(uv_handle_type type, size_t to_return, OPMOCK_MATCHER match_type);
void uv_handle_size_MockReset();
typedef size_t (* OPMOCK_uv_handle_size_CALLBACK)(uv_handle_type type, int calls);
void uv_handle_size_MockWithCallback(OPMOCK_uv_handle_size_CALLBACK callback);
void uv_handle_size_VerifyMock();
void uv_req_size_ExpectAndReturn(uv_req_type type, size_t to_return, OPMOCK_MATCHER match_type);
void uv_req_size_MockReset();
typedef size_t (* OPMOCK_uv_req_size_CALLBACK)(uv_req_type type, int calls);
void uv_req_size_MockWithCallback(OPMOCK_uv_req_size_CALLBACK callback);
void uv_req_size_VerifyMock();
void uv_is_active_ExpectAndReturn(const uv_handle_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_is_active_MockReset();
typedef int (* OPMOCK_uv_is_active_CALLBACK)(const uv_handle_t * handle, int calls);
void uv_is_active_MockWithCallback(OPMOCK_uv_is_active_CALLBACK callback);
void uv_is_active_VerifyMock();
void uv_walk_ExpectAndReturn(uv_loop_t * loop, uv_walk_cb walk_cb, void * arg, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_walk_cb, OPMOCK_MATCHER match_arg);
void uv_walk_MockReset();
typedef void (* OPMOCK_uv_walk_CALLBACK)(uv_loop_t * loop, uv_walk_cb walk_cb, void * arg, int calls);
void uv_walk_MockWithCallback(OPMOCK_uv_walk_CALLBACK callback);
void uv_walk_VerifyMock();
void uv_close_ExpectAndReturn(uv_handle_t * handle, uv_close_cb close_cb, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_close_cb);
void uv_close_MockReset();
typedef void (* OPMOCK_uv_close_CALLBACK)(uv_handle_t * handle, uv_close_cb close_cb, int calls);
void uv_close_MockWithCallback(OPMOCK_uv_close_CALLBACK callback);
void uv_close_VerifyMock();
void uv_send_buffer_size_ExpectAndReturn(uv_handle_t * handle, int * value, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_value);
void uv_send_buffer_size_MockReset();
typedef int (* OPMOCK_uv_send_buffer_size_CALLBACK)(uv_handle_t * handle, int * value, int calls);
void uv_send_buffer_size_MockWithCallback(OPMOCK_uv_send_buffer_size_CALLBACK callback);
void uv_send_buffer_size_VerifyMock();
void uv_recv_buffer_size_ExpectAndReturn(uv_handle_t * handle, int * value, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_value);
void uv_recv_buffer_size_MockReset();
typedef int (* OPMOCK_uv_recv_buffer_size_CALLBACK)(uv_handle_t * handle, int * value, int calls);
void uv_recv_buffer_size_MockWithCallback(OPMOCK_uv_recv_buffer_size_CALLBACK callback);
void uv_recv_buffer_size_VerifyMock();
void uv_fileno_ExpectAndReturn(const uv_handle_t * handle, uv_os_fd_t * fd, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_fd);
void uv_fileno_MockReset();
typedef int (* OPMOCK_uv_fileno_CALLBACK)(const uv_handle_t * handle, uv_os_fd_t * fd, int calls);
void uv_fileno_MockWithCallback(OPMOCK_uv_fileno_CALLBACK callback);
void uv_fileno_VerifyMock();
void uv_buf_init_ExpectAndReturn(char * base, unsigned int len, uv_buf_t to_return, OPMOCK_MATCHER match_base, OPMOCK_MATCHER match_len);
void uv_buf_init_MockReset();
typedef uv_buf_t (* OPMOCK_uv_buf_init_CALLBACK)(char * base, unsigned int len, int calls);
void uv_buf_init_MockWithCallback(OPMOCK_uv_buf_init_CALLBACK callback);
void uv_buf_init_VerifyMock();
void uv_listen_ExpectAndReturn(uv_stream_t * stream, int backlog, uv_connection_cb cb, int to_return, OPMOCK_MATCHER match_stream, OPMOCK_MATCHER match_backlog, OPMOCK_MATCHER match_cb);
void uv_listen_MockReset();
typedef int (* OPMOCK_uv_listen_CALLBACK)(uv_stream_t * stream, int backlog, uv_connection_cb cb, int calls);
void uv_listen_MockWithCallback(OPMOCK_uv_listen_CALLBACK callback);
void uv_listen_VerifyMock();
void uv_accept_ExpectAndReturn(uv_stream_t * server, uv_stream_t * client, int to_return, OPMOCK_MATCHER match_server, OPMOCK_MATCHER match_client);
void uv_accept_MockReset();
typedef int (* OPMOCK_uv_accept_CALLBACK)(uv_stream_t * server, uv_stream_t * client, int calls);
void uv_accept_MockWithCallback(OPMOCK_uv_accept_CALLBACK callback);
void uv_accept_VerifyMock();
void uv_read_start_ExpectAndReturn(uv_stream_t * arg1, uv_alloc_cb alloc_cb, uv_read_cb read_cb, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_alloc_cb, OPMOCK_MATCHER match_read_cb);
void uv_read_start_MockReset();
typedef int (* OPMOCK_uv_read_start_CALLBACK)(uv_stream_t * arg1, uv_alloc_cb alloc_cb, uv_read_cb read_cb, int calls);
void uv_read_start_MockWithCallback(OPMOCK_uv_read_start_CALLBACK callback);
void uv_read_start_VerifyMock();
void uv_read_stop_ExpectAndReturn(uv_stream_t * arg1, int to_return, OPMOCK_MATCHER match_arg1);
void uv_read_stop_MockReset();
typedef int (* OPMOCK_uv_read_stop_CALLBACK)(uv_stream_t * arg1, int calls);
void uv_read_stop_MockWithCallback(OPMOCK_uv_read_stop_CALLBACK callback);
void uv_read_stop_VerifyMock();
void uv_write_ExpectAndReturn(uv_write_t * req, uv_stream_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, uv_write_cb cb, int to_return, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_bufs, OPMOCK_MATCHER match_nbufs, OPMOCK_MATCHER match_cb);
void uv_write_MockReset();
typedef int (* OPMOCK_uv_write_CALLBACK)(uv_write_t * req, uv_stream_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, uv_write_cb cb, int calls);
void uv_write_MockWithCallback(OPMOCK_uv_write_CALLBACK callback);
void uv_write_VerifyMock();
void uv_write2_ExpectAndReturn(uv_write_t * req, uv_stream_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, uv_stream_t * send_handle, uv_write_cb cb, int to_return, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_bufs, OPMOCK_MATCHER match_nbufs, OPMOCK_MATCHER match_send_handle, OPMOCK_MATCHER match_cb);
void uv_write2_MockReset();
typedef int (* OPMOCK_uv_write2_CALLBACK)(uv_write_t * req, uv_stream_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, uv_stream_t * send_handle, uv_write_cb cb, int calls);
void uv_write2_MockWithCallback(OPMOCK_uv_write2_CALLBACK callback);
void uv_write2_VerifyMock();
void uv_try_write_ExpectAndReturn(uv_stream_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_bufs, OPMOCK_MATCHER match_nbufs);
void uv_try_write_MockReset();
typedef int (* OPMOCK_uv_try_write_CALLBACK)(uv_stream_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, int calls);
void uv_try_write_MockWithCallback(OPMOCK_uv_try_write_CALLBACK callback);
void uv_try_write_VerifyMock();
void uv_is_readable_ExpectAndReturn(const uv_stream_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_is_readable_MockReset();
typedef int (* OPMOCK_uv_is_readable_CALLBACK)(const uv_stream_t * handle, int calls);
void uv_is_readable_MockWithCallback(OPMOCK_uv_is_readable_CALLBACK callback);
void uv_is_readable_VerifyMock();
void uv_is_writable_ExpectAndReturn(const uv_stream_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_is_writable_MockReset();
typedef int (* OPMOCK_uv_is_writable_CALLBACK)(const uv_stream_t * handle, int calls);
void uv_is_writable_MockWithCallback(OPMOCK_uv_is_writable_CALLBACK callback);
void uv_is_writable_VerifyMock();
void uv_stream_set_blocking_ExpectAndReturn(uv_stream_t * handle, int blocking, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_blocking);
void uv_stream_set_blocking_MockReset();
typedef int (* OPMOCK_uv_stream_set_blocking_CALLBACK)(uv_stream_t * handle, int blocking, int calls);
void uv_stream_set_blocking_MockWithCallback(OPMOCK_uv_stream_set_blocking_CALLBACK callback);
void uv_stream_set_blocking_VerifyMock();
void uv_is_closing_ExpectAndReturn(const uv_handle_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_is_closing_MockReset();
typedef int (* OPMOCK_uv_is_closing_CALLBACK)(const uv_handle_t * handle, int calls);
void uv_is_closing_MockWithCallback(OPMOCK_uv_is_closing_CALLBACK callback);
void uv_is_closing_VerifyMock();
void uv_tcp_init_ExpectAndReturn(uv_loop_t * arg1, uv_tcp_t * handle, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_handle);
void uv_tcp_init_MockReset();
typedef int (* OPMOCK_uv_tcp_init_CALLBACK)(uv_loop_t * arg1, uv_tcp_t * handle, int calls);
void uv_tcp_init_MockWithCallback(OPMOCK_uv_tcp_init_CALLBACK callback);
void uv_tcp_init_VerifyMock();
void uv_tcp_open_ExpectAndReturn(uv_tcp_t * handle, uv_os_sock_t sock, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_sock);
void uv_tcp_open_MockReset();
typedef int (* OPMOCK_uv_tcp_open_CALLBACK)(uv_tcp_t * handle, uv_os_sock_t sock, int calls);
void uv_tcp_open_MockWithCallback(OPMOCK_uv_tcp_open_CALLBACK callback);
void uv_tcp_open_VerifyMock();
void uv_tcp_nodelay_ExpectAndReturn(uv_tcp_t * handle, int enable, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_enable);
void uv_tcp_nodelay_MockReset();
typedef int (* OPMOCK_uv_tcp_nodelay_CALLBACK)(uv_tcp_t * handle, int enable, int calls);
void uv_tcp_nodelay_MockWithCallback(OPMOCK_uv_tcp_nodelay_CALLBACK callback);
void uv_tcp_nodelay_VerifyMock();
void uv_tcp_keepalive_ExpectAndReturn(uv_tcp_t * handle, int enable, unsigned int delay, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_enable, OPMOCK_MATCHER match_delay);
void uv_tcp_keepalive_MockReset();
typedef int (* OPMOCK_uv_tcp_keepalive_CALLBACK)(uv_tcp_t * handle, int enable, unsigned int delay, int calls);
void uv_tcp_keepalive_MockWithCallback(OPMOCK_uv_tcp_keepalive_CALLBACK callback);
void uv_tcp_keepalive_VerifyMock();
void uv_tcp_simultaneous_accepts_ExpectAndReturn(uv_tcp_t * handle, int enable, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_enable);
void uv_tcp_simultaneous_accepts_MockReset();
typedef int (* OPMOCK_uv_tcp_simultaneous_accepts_CALLBACK)(uv_tcp_t * handle, int enable, int calls);
void uv_tcp_simultaneous_accepts_MockWithCallback(OPMOCK_uv_tcp_simultaneous_accepts_CALLBACK callback);
void uv_tcp_simultaneous_accepts_VerifyMock();
void uv_tcp_bind_ExpectAndReturn(uv_tcp_t * handle, const struct sockaddr * addr, unsigned int flags, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_addr, OPMOCK_MATCHER match_flags);
void uv_tcp_bind_MockReset();
typedef int (* OPMOCK_uv_tcp_bind_CALLBACK)(uv_tcp_t * handle, const struct sockaddr * addr, unsigned int flags, int calls);
void uv_tcp_bind_MockWithCallback(OPMOCK_uv_tcp_bind_CALLBACK callback);
void uv_tcp_bind_VerifyMock();
void uv_tcp_getsockname_ExpectAndReturn(const uv_tcp_t * handle, struct sockaddr * name, int * namelen, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_name, OPMOCK_MATCHER match_namelen);
void uv_tcp_getsockname_MockReset();
typedef int (* OPMOCK_uv_tcp_getsockname_CALLBACK)(const uv_tcp_t * handle, struct sockaddr * name, int * namelen, int calls);
void uv_tcp_getsockname_MockWithCallback(OPMOCK_uv_tcp_getsockname_CALLBACK callback);
void uv_tcp_getsockname_VerifyMock();
void uv_tcp_getpeername_ExpectAndReturn(const uv_tcp_t * handle, struct sockaddr * name, int * namelen, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_name, OPMOCK_MATCHER match_namelen);
void uv_tcp_getpeername_MockReset();
typedef int (* OPMOCK_uv_tcp_getpeername_CALLBACK)(const uv_tcp_t * handle, struct sockaddr * name, int * namelen, int calls);
void uv_tcp_getpeername_MockWithCallback(OPMOCK_uv_tcp_getpeername_CALLBACK callback);
void uv_tcp_getpeername_VerifyMock();
void uv_tcp_connect_ExpectAndReturn(uv_connect_t * req, uv_tcp_t * handle, const struct sockaddr * addr, uv_connect_cb cb, int to_return, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_addr, OPMOCK_MATCHER match_cb);
void uv_tcp_connect_MockReset();
typedef int (* OPMOCK_uv_tcp_connect_CALLBACK)(uv_connect_t * req, uv_tcp_t * handle, const struct sockaddr * addr, uv_connect_cb cb, int calls);
void uv_tcp_connect_MockWithCallback(OPMOCK_uv_tcp_connect_CALLBACK callback);
void uv_tcp_connect_VerifyMock();
void uv_udp_init_ExpectAndReturn(uv_loop_t * arg1, uv_udp_t * handle, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_handle);
void uv_udp_init_MockReset();
typedef int (* OPMOCK_uv_udp_init_CALLBACK)(uv_loop_t * arg1, uv_udp_t * handle, int calls);
void uv_udp_init_MockWithCallback(OPMOCK_uv_udp_init_CALLBACK callback);
void uv_udp_init_VerifyMock();
void uv_udp_open_ExpectAndReturn(uv_udp_t * handle, uv_os_sock_t sock, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_sock);
void uv_udp_open_MockReset();
typedef int (* OPMOCK_uv_udp_open_CALLBACK)(uv_udp_t * handle, uv_os_sock_t sock, int calls);
void uv_udp_open_MockWithCallback(OPMOCK_uv_udp_open_CALLBACK callback);
void uv_udp_open_VerifyMock();
void uv_udp_bind_ExpectAndReturn(uv_udp_t * handle, const struct sockaddr * addr, unsigned int flags, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_addr, OPMOCK_MATCHER match_flags);
void uv_udp_bind_MockReset();
typedef int (* OPMOCK_uv_udp_bind_CALLBACK)(uv_udp_t * handle, const struct sockaddr * addr, unsigned int flags, int calls);
void uv_udp_bind_MockWithCallback(OPMOCK_uv_udp_bind_CALLBACK callback);
void uv_udp_bind_VerifyMock();
void uv_udp_getsockname_ExpectAndReturn(const uv_udp_t * handle, struct sockaddr * name, int * namelen, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_name, OPMOCK_MATCHER match_namelen);
void uv_udp_getsockname_MockReset();
typedef int (* OPMOCK_uv_udp_getsockname_CALLBACK)(const uv_udp_t * handle, struct sockaddr * name, int * namelen, int calls);
void uv_udp_getsockname_MockWithCallback(OPMOCK_uv_udp_getsockname_CALLBACK callback);
void uv_udp_getsockname_VerifyMock();
void uv_udp_set_membership_ExpectAndReturn(uv_udp_t * handle, const char * multicast_addr, const char * interface_addr, uv_membership membership, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_multicast_addr, OPMOCK_MATCHER match_interface_addr, OPMOCK_MATCHER match_membership);
void uv_udp_set_membership_MockReset();
typedef int (* OPMOCK_uv_udp_set_membership_CALLBACK)(uv_udp_t * handle, const char * multicast_addr, const char * interface_addr, uv_membership membership, int calls);
void uv_udp_set_membership_MockWithCallback(OPMOCK_uv_udp_set_membership_CALLBACK callback);
void uv_udp_set_membership_VerifyMock();
void uv_udp_set_multicast_loop_ExpectAndReturn(uv_udp_t * handle, int on, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_on);
void uv_udp_set_multicast_loop_MockReset();
typedef int (* OPMOCK_uv_udp_set_multicast_loop_CALLBACK)(uv_udp_t * handle, int on, int calls);
void uv_udp_set_multicast_loop_MockWithCallback(OPMOCK_uv_udp_set_multicast_loop_CALLBACK callback);
void uv_udp_set_multicast_loop_VerifyMock();
void uv_udp_set_multicast_ttl_ExpectAndReturn(uv_udp_t * handle, int ttl, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_ttl);
void uv_udp_set_multicast_ttl_MockReset();
typedef int (* OPMOCK_uv_udp_set_multicast_ttl_CALLBACK)(uv_udp_t * handle, int ttl, int calls);
void uv_udp_set_multicast_ttl_MockWithCallback(OPMOCK_uv_udp_set_multicast_ttl_CALLBACK callback);
void uv_udp_set_multicast_ttl_VerifyMock();
void uv_udp_set_multicast_interface_ExpectAndReturn(uv_udp_t * handle, const char * interface_addr, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_interface_addr);
void uv_udp_set_multicast_interface_MockReset();
typedef int (* OPMOCK_uv_udp_set_multicast_interface_CALLBACK)(uv_udp_t * handle, const char * interface_addr, int calls);
void uv_udp_set_multicast_interface_MockWithCallback(OPMOCK_uv_udp_set_multicast_interface_CALLBACK callback);
void uv_udp_set_multicast_interface_VerifyMock();
void uv_udp_set_broadcast_ExpectAndReturn(uv_udp_t * handle, int on, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_on);
void uv_udp_set_broadcast_MockReset();
typedef int (* OPMOCK_uv_udp_set_broadcast_CALLBACK)(uv_udp_t * handle, int on, int calls);
void uv_udp_set_broadcast_MockWithCallback(OPMOCK_uv_udp_set_broadcast_CALLBACK callback);
void uv_udp_set_broadcast_VerifyMock();
void uv_udp_set_ttl_ExpectAndReturn(uv_udp_t * handle, int ttl, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_ttl);
void uv_udp_set_ttl_MockReset();
typedef int (* OPMOCK_uv_udp_set_ttl_CALLBACK)(uv_udp_t * handle, int ttl, int calls);
void uv_udp_set_ttl_MockWithCallback(OPMOCK_uv_udp_set_ttl_CALLBACK callback);
void uv_udp_set_ttl_VerifyMock();
void uv_udp_send_ExpectAndReturn(uv_udp_send_t * req, uv_udp_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, const struct sockaddr * addr, uv_udp_send_cb send_cb, int to_return, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_bufs, OPMOCK_MATCHER match_nbufs, OPMOCK_MATCHER match_addr, OPMOCK_MATCHER match_send_cb);
void uv_udp_send_MockReset();
typedef int (* OPMOCK_uv_udp_send_CALLBACK)(uv_udp_send_t * req, uv_udp_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, const struct sockaddr * addr, uv_udp_send_cb send_cb, int calls);
void uv_udp_send_MockWithCallback(OPMOCK_uv_udp_send_CALLBACK callback);
void uv_udp_send_VerifyMock();
void uv_udp_try_send_ExpectAndReturn(uv_udp_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, const struct sockaddr * addr, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_bufs, OPMOCK_MATCHER match_nbufs, OPMOCK_MATCHER match_addr);
void uv_udp_try_send_MockReset();
typedef int (* OPMOCK_uv_udp_try_send_CALLBACK)(uv_udp_t * handle, const uv_buf_t  bufs [], unsigned int nbufs, const struct sockaddr * addr, int calls);
void uv_udp_try_send_MockWithCallback(OPMOCK_uv_udp_try_send_CALLBACK callback);
void uv_udp_try_send_VerifyMock();
void uv_udp_recv_start_ExpectAndReturn(uv_udp_t * handle, uv_alloc_cb alloc_cb, uv_udp_recv_cb recv_cb, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_alloc_cb, OPMOCK_MATCHER match_recv_cb);
void uv_udp_recv_start_MockReset();
typedef int (* OPMOCK_uv_udp_recv_start_CALLBACK)(uv_udp_t * handle, uv_alloc_cb alloc_cb, uv_udp_recv_cb recv_cb, int calls);
void uv_udp_recv_start_MockWithCallback(OPMOCK_uv_udp_recv_start_CALLBACK callback);
void uv_udp_recv_start_VerifyMock();
void uv_udp_recv_stop_ExpectAndReturn(uv_udp_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_udp_recv_stop_MockReset();
typedef int (* OPMOCK_uv_udp_recv_stop_CALLBACK)(uv_udp_t * handle, int calls);
void uv_udp_recv_stop_MockWithCallback(OPMOCK_uv_udp_recv_stop_CALLBACK callback);
void uv_udp_recv_stop_VerifyMock();
void uv_tty_init_ExpectAndReturn(uv_loop_t * arg1, uv_tty_t * arg2, uv_file fd, int readable, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_arg2, OPMOCK_MATCHER match_fd, OPMOCK_MATCHER match_readable);
void uv_tty_init_MockReset();
typedef int (* OPMOCK_uv_tty_init_CALLBACK)(uv_loop_t * arg1, uv_tty_t * arg2, uv_file fd, int readable, int calls);
void uv_tty_init_MockWithCallback(OPMOCK_uv_tty_init_CALLBACK callback);
void uv_tty_init_VerifyMock();
void uv_tty_set_mode_ExpectAndReturn(uv_tty_t * arg1, int mode, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_mode);
void uv_tty_set_mode_MockReset();
typedef int (* OPMOCK_uv_tty_set_mode_CALLBACK)(uv_tty_t * arg1, int mode, int calls);
void uv_tty_set_mode_MockWithCallback(OPMOCK_uv_tty_set_mode_CALLBACK callback);
void uv_tty_set_mode_VerifyMock();
void uv_tty_reset_mode_ExpectAndReturn(int to_return);
void uv_tty_reset_mode_MockReset();
typedef int (* OPMOCK_uv_tty_reset_mode_CALLBACK)(int calls);
void uv_tty_reset_mode_MockWithCallback(OPMOCK_uv_tty_reset_mode_CALLBACK callback);
void uv_tty_reset_mode_VerifyMock();
void uv_tty_get_winsize_ExpectAndReturn(uv_tty_t * arg1, int * width, int * height, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_width, OPMOCK_MATCHER match_height);
void uv_tty_get_winsize_MockReset();
typedef int (* OPMOCK_uv_tty_get_winsize_CALLBACK)(uv_tty_t * arg1, int * width, int * height, int calls);
void uv_tty_get_winsize_MockWithCallback(OPMOCK_uv_tty_get_winsize_CALLBACK callback);
void uv_tty_get_winsize_VerifyMock();
void uv_guess_handle_ExpectAndReturn(uv_file file, uv_handle_type to_return, OPMOCK_MATCHER match_file);
void uv_guess_handle_MockReset();
typedef uv_handle_type (* OPMOCK_uv_guess_handle_CALLBACK)(uv_file file, int calls);
void uv_guess_handle_MockWithCallback(OPMOCK_uv_guess_handle_CALLBACK callback);
void uv_guess_handle_VerifyMock();
void uv_pipe_init_ExpectAndReturn(uv_loop_t * arg1, uv_pipe_t * handle, int ipc, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_ipc);
void uv_pipe_init_MockReset();
typedef int (* OPMOCK_uv_pipe_init_CALLBACK)(uv_loop_t * arg1, uv_pipe_t * handle, int ipc, int calls);
void uv_pipe_init_MockWithCallback(OPMOCK_uv_pipe_init_CALLBACK callback);
void uv_pipe_init_VerifyMock();
void uv_pipe_open_ExpectAndReturn(uv_pipe_t * arg1, uv_file file, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_file);
void uv_pipe_open_MockReset();
typedef int (* OPMOCK_uv_pipe_open_CALLBACK)(uv_pipe_t * arg1, uv_file file, int calls);
void uv_pipe_open_MockWithCallback(OPMOCK_uv_pipe_open_CALLBACK callback);
void uv_pipe_open_VerifyMock();
void uv_pipe_bind_ExpectAndReturn(uv_pipe_t * handle, const char * name, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_name);
void uv_pipe_bind_MockReset();
typedef int (* OPMOCK_uv_pipe_bind_CALLBACK)(uv_pipe_t * handle, const char * name, int calls);
void uv_pipe_bind_MockWithCallback(OPMOCK_uv_pipe_bind_CALLBACK callback);
void uv_pipe_bind_VerifyMock();
void uv_pipe_connect_ExpectAndReturn(uv_connect_t * req, uv_pipe_t * handle, const char * name, uv_connect_cb cb, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_name, OPMOCK_MATCHER match_cb);
void uv_pipe_connect_MockReset();
typedef void (* OPMOCK_uv_pipe_connect_CALLBACK)(uv_connect_t * req, uv_pipe_t * handle, const char * name, uv_connect_cb cb, int calls);
void uv_pipe_connect_MockWithCallback(OPMOCK_uv_pipe_connect_CALLBACK callback);
void uv_pipe_connect_VerifyMock();
void uv_pipe_getsockname_ExpectAndReturn(const uv_pipe_t * handle, char * buf, size_t * len, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_buf, OPMOCK_MATCHER match_len);
void uv_pipe_getsockname_MockReset();
typedef int (* OPMOCK_uv_pipe_getsockname_CALLBACK)(const uv_pipe_t * handle, char * buf, size_t * len, int calls);
void uv_pipe_getsockname_MockWithCallback(OPMOCK_uv_pipe_getsockname_CALLBACK callback);
void uv_pipe_getsockname_VerifyMock();
void uv_pipe_pending_instances_ExpectAndReturn(uv_pipe_t * handle, int count, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_count);
void uv_pipe_pending_instances_MockReset();
typedef void (* OPMOCK_uv_pipe_pending_instances_CALLBACK)(uv_pipe_t * handle, int count, int calls);
void uv_pipe_pending_instances_MockWithCallback(OPMOCK_uv_pipe_pending_instances_CALLBACK callback);
void uv_pipe_pending_instances_VerifyMock();
void uv_pipe_pending_count_ExpectAndReturn(uv_pipe_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_pipe_pending_count_MockReset();
typedef int (* OPMOCK_uv_pipe_pending_count_CALLBACK)(uv_pipe_t * handle, int calls);
void uv_pipe_pending_count_MockWithCallback(OPMOCK_uv_pipe_pending_count_CALLBACK callback);
void uv_pipe_pending_count_VerifyMock();
void uv_pipe_pending_type_ExpectAndReturn(uv_pipe_t * handle, uv_handle_type to_return, OPMOCK_MATCHER match_handle);
void uv_pipe_pending_type_MockReset();
typedef uv_handle_type (* OPMOCK_uv_pipe_pending_type_CALLBACK)(uv_pipe_t * handle, int calls);
void uv_pipe_pending_type_MockWithCallback(OPMOCK_uv_pipe_pending_type_CALLBACK callback);
void uv_pipe_pending_type_VerifyMock();
void uv_poll_init_ExpectAndReturn(uv_loop_t * loop, uv_poll_t * handle, int fd, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_fd);
void uv_poll_init_MockReset();
typedef int (* OPMOCK_uv_poll_init_CALLBACK)(uv_loop_t * loop, uv_poll_t * handle, int fd, int calls);
void uv_poll_init_MockWithCallback(OPMOCK_uv_poll_init_CALLBACK callback);
void uv_poll_init_VerifyMock();
void uv_poll_init_socket_ExpectAndReturn(uv_loop_t * loop, uv_poll_t * handle, uv_os_sock_t socket, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_socket);
void uv_poll_init_socket_MockReset();
typedef int (* OPMOCK_uv_poll_init_socket_CALLBACK)(uv_loop_t * loop, uv_poll_t * handle, uv_os_sock_t socket, int calls);
void uv_poll_init_socket_MockWithCallback(OPMOCK_uv_poll_init_socket_CALLBACK callback);
void uv_poll_init_socket_VerifyMock();
void uv_poll_start_ExpectAndReturn(uv_poll_t * handle, int events, uv_poll_cb cb, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_events, OPMOCK_MATCHER match_cb);
void uv_poll_start_MockReset();
typedef int (* OPMOCK_uv_poll_start_CALLBACK)(uv_poll_t * handle, int events, uv_poll_cb cb, int calls);
void uv_poll_start_MockWithCallback(OPMOCK_uv_poll_start_CALLBACK callback);
void uv_poll_start_VerifyMock();
void uv_poll_stop_ExpectAndReturn(uv_poll_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_poll_stop_MockReset();
typedef int (* OPMOCK_uv_poll_stop_CALLBACK)(uv_poll_t * handle, int calls);
void uv_poll_stop_MockWithCallback(OPMOCK_uv_poll_stop_CALLBACK callback);
void uv_poll_stop_VerifyMock();
void uv_prepare_init_ExpectAndReturn(uv_loop_t * arg1, uv_prepare_t * prepare, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_prepare);
void uv_prepare_init_MockReset();
typedef int (* OPMOCK_uv_prepare_init_CALLBACK)(uv_loop_t * arg1, uv_prepare_t * prepare, int calls);
void uv_prepare_init_MockWithCallback(OPMOCK_uv_prepare_init_CALLBACK callback);
void uv_prepare_init_VerifyMock();
void uv_prepare_start_ExpectAndReturn(uv_prepare_t * prepare, uv_prepare_cb cb, int to_return, OPMOCK_MATCHER match_prepare, OPMOCK_MATCHER match_cb);
void uv_prepare_start_MockReset();
typedef int (* OPMOCK_uv_prepare_start_CALLBACK)(uv_prepare_t * prepare, uv_prepare_cb cb, int calls);
void uv_prepare_start_MockWithCallback(OPMOCK_uv_prepare_start_CALLBACK callback);
void uv_prepare_start_VerifyMock();
void uv_prepare_stop_ExpectAndReturn(uv_prepare_t * prepare, int to_return, OPMOCK_MATCHER match_prepare);
void uv_prepare_stop_MockReset();
typedef int (* OPMOCK_uv_prepare_stop_CALLBACK)(uv_prepare_t * prepare, int calls);
void uv_prepare_stop_MockWithCallback(OPMOCK_uv_prepare_stop_CALLBACK callback);
void uv_prepare_stop_VerifyMock();
void uv_check_init_ExpectAndReturn(uv_loop_t * arg1, uv_check_t * check, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_check);
void uv_check_init_MockReset();
typedef int (* OPMOCK_uv_check_init_CALLBACK)(uv_loop_t * arg1, uv_check_t * check, int calls);
void uv_check_init_MockWithCallback(OPMOCK_uv_check_init_CALLBACK callback);
void uv_check_init_VerifyMock();
void uv_check_start_ExpectAndReturn(uv_check_t * check, uv_check_cb cb, int to_return, OPMOCK_MATCHER match_check, OPMOCK_MATCHER match_cb);
void uv_check_start_MockReset();
typedef int (* OPMOCK_uv_check_start_CALLBACK)(uv_check_t * check, uv_check_cb cb, int calls);
void uv_check_start_MockWithCallback(OPMOCK_uv_check_start_CALLBACK callback);
void uv_check_start_VerifyMock();
void uv_check_stop_ExpectAndReturn(uv_check_t * check, int to_return, OPMOCK_MATCHER match_check);
void uv_check_stop_MockReset();
typedef int (* OPMOCK_uv_check_stop_CALLBACK)(uv_check_t * check, int calls);
void uv_check_stop_MockWithCallback(OPMOCK_uv_check_stop_CALLBACK callback);
void uv_check_stop_VerifyMock();
void uv_idle_init_ExpectAndReturn(uv_loop_t * arg1, uv_idle_t * idle, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_idle);
void uv_idle_init_MockReset();
typedef int (* OPMOCK_uv_idle_init_CALLBACK)(uv_loop_t * arg1, uv_idle_t * idle, int calls);
void uv_idle_init_MockWithCallback(OPMOCK_uv_idle_init_CALLBACK callback);
void uv_idle_init_VerifyMock();
void uv_idle_start_ExpectAndReturn(uv_idle_t * idle, uv_idle_cb cb, int to_return, OPMOCK_MATCHER match_idle, OPMOCK_MATCHER match_cb);
void uv_idle_start_MockReset();
typedef int (* OPMOCK_uv_idle_start_CALLBACK)(uv_idle_t * idle, uv_idle_cb cb, int calls);
void uv_idle_start_MockWithCallback(OPMOCK_uv_idle_start_CALLBACK callback);
void uv_idle_start_VerifyMock();
void uv_idle_stop_ExpectAndReturn(uv_idle_t * idle, int to_return, OPMOCK_MATCHER match_idle);
void uv_idle_stop_MockReset();
typedef int (* OPMOCK_uv_idle_stop_CALLBACK)(uv_idle_t * idle, int calls);
void uv_idle_stop_MockWithCallback(OPMOCK_uv_idle_stop_CALLBACK callback);
void uv_idle_stop_VerifyMock();
void uv_async_init_ExpectAndReturn(uv_loop_t * arg1, uv_async_t * async, uv_async_cb async_cb, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_async, OPMOCK_MATCHER match_async_cb);
void uv_async_init_MockReset();
typedef int (* OPMOCK_uv_async_init_CALLBACK)(uv_loop_t * arg1, uv_async_t * async, uv_async_cb async_cb, int calls);
void uv_async_init_MockWithCallback(OPMOCK_uv_async_init_CALLBACK callback);
void uv_async_init_VerifyMock();
void uv_async_send_ExpectAndReturn(uv_async_t * async, int to_return, OPMOCK_MATCHER match_async);
void uv_async_send_MockReset();
typedef int (* OPMOCK_uv_async_send_CALLBACK)(uv_async_t * async, int calls);
void uv_async_send_MockWithCallback(OPMOCK_uv_async_send_CALLBACK callback);
void uv_async_send_VerifyMock();
void uv_timer_init_ExpectAndReturn(uv_loop_t * arg1, uv_timer_t * handle, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_handle);
void uv_timer_init_MockReset();
typedef int (* OPMOCK_uv_timer_init_CALLBACK)(uv_loop_t * arg1, uv_timer_t * handle, int calls);
void uv_timer_init_MockWithCallback(OPMOCK_uv_timer_init_CALLBACK callback);
void uv_timer_init_VerifyMock();
void uv_timer_start_ExpectAndReturn(uv_timer_t * handle, uv_timer_cb cb, uint64_t timeout, uint64_t repeat, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_cb, OPMOCK_MATCHER match_timeout, OPMOCK_MATCHER match_repeat);
void uv_timer_start_MockReset();
typedef int (* OPMOCK_uv_timer_start_CALLBACK)(uv_timer_t * handle, uv_timer_cb cb, uint64_t timeout, uint64_t repeat, int calls);
void uv_timer_start_MockWithCallback(OPMOCK_uv_timer_start_CALLBACK callback);
void uv_timer_start_VerifyMock();
void uv_timer_stop_ExpectAndReturn(uv_timer_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_timer_stop_MockReset();
typedef int (* OPMOCK_uv_timer_stop_CALLBACK)(uv_timer_t * handle, int calls);
void uv_timer_stop_MockWithCallback(OPMOCK_uv_timer_stop_CALLBACK callback);
void uv_timer_stop_VerifyMock();
void uv_timer_again_ExpectAndReturn(uv_timer_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_timer_again_MockReset();
typedef int (* OPMOCK_uv_timer_again_CALLBACK)(uv_timer_t * handle, int calls);
void uv_timer_again_MockWithCallback(OPMOCK_uv_timer_again_CALLBACK callback);
void uv_timer_again_VerifyMock();
void uv_timer_set_repeat_ExpectAndReturn(uv_timer_t * handle, uint64_t repeat, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_repeat);
void uv_timer_set_repeat_MockReset();
typedef void (* OPMOCK_uv_timer_set_repeat_CALLBACK)(uv_timer_t * handle, uint64_t repeat, int calls);
void uv_timer_set_repeat_MockWithCallback(OPMOCK_uv_timer_set_repeat_CALLBACK callback);
void uv_timer_set_repeat_VerifyMock();
void uv_timer_get_repeat_ExpectAndReturn(const uv_timer_t * handle, uint64_t to_return, OPMOCK_MATCHER match_handle);
void uv_timer_get_repeat_MockReset();
typedef uint64_t (* OPMOCK_uv_timer_get_repeat_CALLBACK)(const uv_timer_t * handle, int calls);
void uv_timer_get_repeat_MockWithCallback(OPMOCK_uv_timer_get_repeat_CALLBACK callback);
void uv_timer_get_repeat_VerifyMock();
void uv_getaddrinfo_ExpectAndReturn(uv_loop_t * loop, uv_getaddrinfo_t * req, uv_getaddrinfo_cb getaddrinfo_cb, const char * node, const char * service, const struct addrinfo * hints, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_getaddrinfo_cb, OPMOCK_MATCHER match_node, OPMOCK_MATCHER match_service, OPMOCK_MATCHER match_hints);
void uv_getaddrinfo_MockReset();
typedef int (* OPMOCK_uv_getaddrinfo_CALLBACK)(uv_loop_t * loop, uv_getaddrinfo_t * req, uv_getaddrinfo_cb getaddrinfo_cb, const char * node, const char * service, const struct addrinfo * hints, int calls);
void uv_getaddrinfo_MockWithCallback(OPMOCK_uv_getaddrinfo_CALLBACK callback);
void uv_getaddrinfo_VerifyMock();
void uv_freeaddrinfo_ExpectAndReturn(struct addrinfo * ai, OPMOCK_MATCHER match_ai);
void uv_freeaddrinfo_MockReset();
typedef void (* OPMOCK_uv_freeaddrinfo_CALLBACK)(struct addrinfo * ai, int calls);
void uv_freeaddrinfo_MockWithCallback(OPMOCK_uv_freeaddrinfo_CALLBACK callback);
void uv_freeaddrinfo_VerifyMock();
void uv_getnameinfo_ExpectAndReturn(uv_loop_t * loop, uv_getnameinfo_t * req, uv_getnameinfo_cb getnameinfo_cb, const struct sockaddr * addr, int flags, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_getnameinfo_cb, OPMOCK_MATCHER match_addr, OPMOCK_MATCHER match_flags);
void uv_getnameinfo_MockReset();
typedef int (* OPMOCK_uv_getnameinfo_CALLBACK)(uv_loop_t * loop, uv_getnameinfo_t * req, uv_getnameinfo_cb getnameinfo_cb, const struct sockaddr * addr, int flags, int calls);
void uv_getnameinfo_MockWithCallback(OPMOCK_uv_getnameinfo_CALLBACK callback);
void uv_getnameinfo_VerifyMock();
void uv_spawn_ExpectAndReturn(uv_loop_t * loop, uv_process_t * handle, const uv_process_options_t * options, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_options);
void uv_spawn_MockReset();
typedef int (* OPMOCK_uv_spawn_CALLBACK)(uv_loop_t * loop, uv_process_t * handle, const uv_process_options_t * options, int calls);
void uv_spawn_MockWithCallback(OPMOCK_uv_spawn_CALLBACK callback);
void uv_spawn_VerifyMock();
void uv_process_kill_ExpectAndReturn(uv_process_t * arg1, int signum, int to_return, OPMOCK_MATCHER match_arg1, OPMOCK_MATCHER match_signum);
void uv_process_kill_MockReset();
typedef int (* OPMOCK_uv_process_kill_CALLBACK)(uv_process_t * arg1, int signum, int calls);
void uv_process_kill_MockWithCallback(OPMOCK_uv_process_kill_CALLBACK callback);
void uv_process_kill_VerifyMock();
void uv_kill_ExpectAndReturn(int pid, int signum, int to_return, OPMOCK_MATCHER match_pid, OPMOCK_MATCHER match_signum);
void uv_kill_MockReset();
typedef int (* OPMOCK_uv_kill_CALLBACK)(int pid, int signum, int calls);
void uv_kill_MockWithCallback(OPMOCK_uv_kill_CALLBACK callback);
void uv_kill_VerifyMock();
void uv_queue_work_ExpectAndReturn(uv_loop_t * loop, uv_work_t * req, uv_work_cb work_cb, uv_after_work_cb after_work_cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_work_cb, OPMOCK_MATCHER match_after_work_cb);
void uv_queue_work_MockReset();
typedef int (* OPMOCK_uv_queue_work_CALLBACK)(uv_loop_t * loop, uv_work_t * req, uv_work_cb work_cb, uv_after_work_cb after_work_cb, int calls);
void uv_queue_work_MockWithCallback(OPMOCK_uv_queue_work_CALLBACK callback);
void uv_queue_work_VerifyMock();
void uv_cancel_ExpectAndReturn(uv_req_t * req, int to_return, OPMOCK_MATCHER match_req);
void uv_cancel_MockReset();
typedef int (* OPMOCK_uv_cancel_CALLBACK)(uv_req_t * req, int calls);
void uv_cancel_MockWithCallback(OPMOCK_uv_cancel_CALLBACK callback);
void uv_cancel_VerifyMock();
void uv_setup_args_ExpectAndReturn(int argc, char ** argv, char ** to_return, OPMOCK_MATCHER match_argc, OPMOCK_MATCHER match_argv);
void uv_setup_args_MockReset();
typedef char ** (* OPMOCK_uv_setup_args_CALLBACK)(int argc, char ** argv, int calls);
void uv_setup_args_MockWithCallback(OPMOCK_uv_setup_args_CALLBACK callback);
void uv_setup_args_VerifyMock();
void uv_get_process_title_ExpectAndReturn(char * buffer, size_t size, int to_return, OPMOCK_MATCHER match_buffer, OPMOCK_MATCHER match_size);
void uv_get_process_title_MockReset();
typedef int (* OPMOCK_uv_get_process_title_CALLBACK)(char * buffer, size_t size, int calls);
void uv_get_process_title_MockWithCallback(OPMOCK_uv_get_process_title_CALLBACK callback);
void uv_get_process_title_VerifyMock();
void uv_set_process_title_ExpectAndReturn(const char * title, int to_return, OPMOCK_MATCHER match_title);
void uv_set_process_title_MockReset();
typedef int (* OPMOCK_uv_set_process_title_CALLBACK)(const char * title, int calls);
void uv_set_process_title_MockWithCallback(OPMOCK_uv_set_process_title_CALLBACK callback);
void uv_set_process_title_VerifyMock();
void uv_resident_set_memory_ExpectAndReturn(size_t * rss, int to_return, OPMOCK_MATCHER match_rss);
void uv_resident_set_memory_MockReset();
typedef int (* OPMOCK_uv_resident_set_memory_CALLBACK)(size_t * rss, int calls);
void uv_resident_set_memory_MockWithCallback(OPMOCK_uv_resident_set_memory_CALLBACK callback);
void uv_resident_set_memory_VerifyMock();
void uv_uptime_ExpectAndReturn(double * uptime, int to_return, OPMOCK_MATCHER match_uptime);
void uv_uptime_MockReset();
typedef int (* OPMOCK_uv_uptime_CALLBACK)(double * uptime, int calls);
void uv_uptime_MockWithCallback(OPMOCK_uv_uptime_CALLBACK callback);
void uv_uptime_VerifyMock();
void uv_getrusage_ExpectAndReturn(uv_rusage_t * rusage, int to_return, OPMOCK_MATCHER match_rusage);
void uv_getrusage_MockReset();
typedef int (* OPMOCK_uv_getrusage_CALLBACK)(uv_rusage_t * rusage, int calls);
void uv_getrusage_MockWithCallback(OPMOCK_uv_getrusage_CALLBACK callback);
void uv_getrusage_VerifyMock();
void uv_cpu_info_ExpectAndReturn(uv_cpu_info_t ** cpu_infos, int * count, int to_return, OPMOCK_MATCHER match_cpu_infos, OPMOCK_MATCHER match_count);
void uv_cpu_info_MockReset();
typedef int (* OPMOCK_uv_cpu_info_CALLBACK)(uv_cpu_info_t ** cpu_infos, int * count, int calls);
void uv_cpu_info_MockWithCallback(OPMOCK_uv_cpu_info_CALLBACK callback);
void uv_cpu_info_VerifyMock();
void uv_free_cpu_info_ExpectAndReturn(uv_cpu_info_t * cpu_infos, int count, OPMOCK_MATCHER match_cpu_infos, OPMOCK_MATCHER match_count);
void uv_free_cpu_info_MockReset();
typedef void (* OPMOCK_uv_free_cpu_info_CALLBACK)(uv_cpu_info_t * cpu_infos, int count, int calls);
void uv_free_cpu_info_MockWithCallback(OPMOCK_uv_free_cpu_info_CALLBACK callback);
void uv_free_cpu_info_VerifyMock();
void uv_interface_addresses_ExpectAndReturn(uv_interface_address_t ** addresses, int * count, int to_return, OPMOCK_MATCHER match_addresses, OPMOCK_MATCHER match_count);
void uv_interface_addresses_MockReset();
typedef int (* OPMOCK_uv_interface_addresses_CALLBACK)(uv_interface_address_t ** addresses, int * count, int calls);
void uv_interface_addresses_MockWithCallback(OPMOCK_uv_interface_addresses_CALLBACK callback);
void uv_interface_addresses_VerifyMock();
void uv_free_interface_addresses_ExpectAndReturn(uv_interface_address_t * addresses, int count, OPMOCK_MATCHER match_addresses, OPMOCK_MATCHER match_count);
void uv_free_interface_addresses_MockReset();
typedef void (* OPMOCK_uv_free_interface_addresses_CALLBACK)(uv_interface_address_t * addresses, int count, int calls);
void uv_free_interface_addresses_MockWithCallback(OPMOCK_uv_free_interface_addresses_CALLBACK callback);
void uv_free_interface_addresses_VerifyMock();
void uv_fs_req_cleanup_ExpectAndReturn(uv_fs_t * req, OPMOCK_MATCHER match_req);
void uv_fs_req_cleanup_MockReset();
typedef void (* OPMOCK_uv_fs_req_cleanup_CALLBACK)(uv_fs_t * req, int calls);
void uv_fs_req_cleanup_MockWithCallback(OPMOCK_uv_fs_req_cleanup_CALLBACK callback);
void uv_fs_req_cleanup_VerifyMock();
void uv_fs_close_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_cb);
void uv_fs_close_MockReset();
typedef int (* OPMOCK_uv_fs_close_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int calls);
void uv_fs_close_MockWithCallback(OPMOCK_uv_fs_close_CALLBACK callback);
void uv_fs_close_VerifyMock();
void uv_fs_open_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, int flags, int mode, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_flags, OPMOCK_MATCHER match_mode, OPMOCK_MATCHER match_cb);
void uv_fs_open_MockReset();
typedef int (* OPMOCK_uv_fs_open_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, int flags, int mode, uv_fs_cb cb, int calls);
void uv_fs_open_MockWithCallback(OPMOCK_uv_fs_open_CALLBACK callback);
void uv_fs_open_VerifyMock();
void uv_fs_read_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, const uv_buf_t  bufs [], unsigned int nbufs, int64_t offset, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_bufs, OPMOCK_MATCHER match_nbufs, OPMOCK_MATCHER match_offset, OPMOCK_MATCHER match_cb);
void uv_fs_read_MockReset();
typedef int (* OPMOCK_uv_fs_read_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, const uv_buf_t  bufs [], unsigned int nbufs, int64_t offset, uv_fs_cb cb, int calls);
void uv_fs_read_MockWithCallback(OPMOCK_uv_fs_read_CALLBACK callback);
void uv_fs_read_VerifyMock();
void uv_fs_unlink_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_cb);
void uv_fs_unlink_MockReset();
typedef int (* OPMOCK_uv_fs_unlink_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int calls);
void uv_fs_unlink_MockWithCallback(OPMOCK_uv_fs_unlink_CALLBACK callback);
void uv_fs_unlink_VerifyMock();
void uv_fs_write_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, const uv_buf_t  bufs [], unsigned int nbufs, int64_t offset, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_bufs, OPMOCK_MATCHER match_nbufs, OPMOCK_MATCHER match_offset, OPMOCK_MATCHER match_cb);
void uv_fs_write_MockReset();
typedef int (* OPMOCK_uv_fs_write_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, const uv_buf_t  bufs [], unsigned int nbufs, int64_t offset, uv_fs_cb cb, int calls);
void uv_fs_write_MockWithCallback(OPMOCK_uv_fs_write_CALLBACK callback);
void uv_fs_write_VerifyMock();
void uv_fs_mkdir_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, int mode, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_mode, OPMOCK_MATCHER match_cb);
void uv_fs_mkdir_MockReset();
typedef int (* OPMOCK_uv_fs_mkdir_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, int mode, uv_fs_cb cb, int calls);
void uv_fs_mkdir_MockWithCallback(OPMOCK_uv_fs_mkdir_CALLBACK callback);
void uv_fs_mkdir_VerifyMock();
void uv_fs_mkdtemp_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * tpl, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_tpl, OPMOCK_MATCHER match_cb);
void uv_fs_mkdtemp_MockReset();
typedef int (* OPMOCK_uv_fs_mkdtemp_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * tpl, uv_fs_cb cb, int calls);
void uv_fs_mkdtemp_MockWithCallback(OPMOCK_uv_fs_mkdtemp_CALLBACK callback);
void uv_fs_mkdtemp_VerifyMock();
void uv_fs_rmdir_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_cb);
void uv_fs_rmdir_MockReset();
typedef int (* OPMOCK_uv_fs_rmdir_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int calls);
void uv_fs_rmdir_MockWithCallback(OPMOCK_uv_fs_rmdir_CALLBACK callback);
void uv_fs_rmdir_VerifyMock();
void uv_fs_scandir_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, int flags, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_flags, OPMOCK_MATCHER match_cb);
void uv_fs_scandir_MockReset();
typedef int (* OPMOCK_uv_fs_scandir_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, int flags, uv_fs_cb cb, int calls);
void uv_fs_scandir_MockWithCallback(OPMOCK_uv_fs_scandir_CALLBACK callback);
void uv_fs_scandir_VerifyMock();
void uv_fs_scandir_next_ExpectAndReturn(uv_fs_t * req, uv_dirent_t * ent, int to_return, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_ent);
void uv_fs_scandir_next_MockReset();
typedef int (* OPMOCK_uv_fs_scandir_next_CALLBACK)(uv_fs_t * req, uv_dirent_t * ent, int calls);
void uv_fs_scandir_next_MockWithCallback(OPMOCK_uv_fs_scandir_next_CALLBACK callback);
void uv_fs_scandir_next_VerifyMock();
void uv_fs_stat_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_cb);
void uv_fs_stat_MockReset();
typedef int (* OPMOCK_uv_fs_stat_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int calls);
void uv_fs_stat_MockWithCallback(OPMOCK_uv_fs_stat_CALLBACK callback);
void uv_fs_stat_VerifyMock();
void uv_fs_fstat_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_cb);
void uv_fs_fstat_MockReset();
typedef int (* OPMOCK_uv_fs_fstat_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int calls);
void uv_fs_fstat_MockWithCallback(OPMOCK_uv_fs_fstat_CALLBACK callback);
void uv_fs_fstat_VerifyMock();
void uv_fs_rename_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, const char * new_path, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_new_path, OPMOCK_MATCHER match_cb);
void uv_fs_rename_MockReset();
typedef int (* OPMOCK_uv_fs_rename_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, const char * new_path, uv_fs_cb cb, int calls);
void uv_fs_rename_MockWithCallback(OPMOCK_uv_fs_rename_CALLBACK callback);
void uv_fs_rename_VerifyMock();
void uv_fs_fsync_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_cb);
void uv_fs_fsync_MockReset();
typedef int (* OPMOCK_uv_fs_fsync_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int calls);
void uv_fs_fsync_MockWithCallback(OPMOCK_uv_fs_fsync_CALLBACK callback);
void uv_fs_fsync_VerifyMock();
void uv_fs_fdatasync_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_cb);
void uv_fs_fdatasync_MockReset();
typedef int (* OPMOCK_uv_fs_fdatasync_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_fs_cb cb, int calls);
void uv_fs_fdatasync_MockWithCallback(OPMOCK_uv_fs_fdatasync_CALLBACK callback);
void uv_fs_fdatasync_VerifyMock();
void uv_fs_ftruncate_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, int64_t offset, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_offset, OPMOCK_MATCHER match_cb);
void uv_fs_ftruncate_MockReset();
typedef int (* OPMOCK_uv_fs_ftruncate_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, int64_t offset, uv_fs_cb cb, int calls);
void uv_fs_ftruncate_MockWithCallback(OPMOCK_uv_fs_ftruncate_CALLBACK callback);
void uv_fs_ftruncate_VerifyMock();
void uv_fs_sendfile_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file out_fd, uv_file in_fd, int64_t in_offset, size_t length, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_out_fd, OPMOCK_MATCHER match_in_fd, OPMOCK_MATCHER match_in_offset, OPMOCK_MATCHER match_length, OPMOCK_MATCHER match_cb);
void uv_fs_sendfile_MockReset();
typedef int (* OPMOCK_uv_fs_sendfile_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file out_fd, uv_file in_fd, int64_t in_offset, size_t length, uv_fs_cb cb, int calls);
void uv_fs_sendfile_MockWithCallback(OPMOCK_uv_fs_sendfile_CALLBACK callback);
void uv_fs_sendfile_VerifyMock();
void uv_fs_access_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, int mode, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_mode, OPMOCK_MATCHER match_cb);
void uv_fs_access_MockReset();
typedef int (* OPMOCK_uv_fs_access_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, int mode, uv_fs_cb cb, int calls);
void uv_fs_access_MockWithCallback(OPMOCK_uv_fs_access_CALLBACK callback);
void uv_fs_access_VerifyMock();
void uv_fs_chmod_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, int mode, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_mode, OPMOCK_MATCHER match_cb);
void uv_fs_chmod_MockReset();
typedef int (* OPMOCK_uv_fs_chmod_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, int mode, uv_fs_cb cb, int calls);
void uv_fs_chmod_MockWithCallback(OPMOCK_uv_fs_chmod_CALLBACK callback);
void uv_fs_chmod_VerifyMock();
void uv_fs_utime_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, double atime, double mtime, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_atime, OPMOCK_MATCHER match_mtime, OPMOCK_MATCHER match_cb);
void uv_fs_utime_MockReset();
typedef int (* OPMOCK_uv_fs_utime_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, double atime, double mtime, uv_fs_cb cb, int calls);
void uv_fs_utime_MockWithCallback(OPMOCK_uv_fs_utime_CALLBACK callback);
void uv_fs_utime_VerifyMock();
void uv_fs_futime_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, double atime, double mtime, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_atime, OPMOCK_MATCHER match_mtime, OPMOCK_MATCHER match_cb);
void uv_fs_futime_MockReset();
typedef int (* OPMOCK_uv_fs_futime_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, double atime, double mtime, uv_fs_cb cb, int calls);
void uv_fs_futime_MockWithCallback(OPMOCK_uv_fs_futime_CALLBACK callback);
void uv_fs_futime_VerifyMock();
void uv_fs_lstat_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_cb);
void uv_fs_lstat_MockReset();
typedef int (* OPMOCK_uv_fs_lstat_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int calls);
void uv_fs_lstat_MockWithCallback(OPMOCK_uv_fs_lstat_CALLBACK callback);
void uv_fs_lstat_VerifyMock();
void uv_fs_link_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, const char * new_path, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_new_path, OPMOCK_MATCHER match_cb);
void uv_fs_link_MockReset();
typedef int (* OPMOCK_uv_fs_link_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, const char * new_path, uv_fs_cb cb, int calls);
void uv_fs_link_MockWithCallback(OPMOCK_uv_fs_link_CALLBACK callback);
void uv_fs_link_VerifyMock();
void uv_fs_symlink_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, const char * new_path, int flags, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_new_path, OPMOCK_MATCHER match_flags, OPMOCK_MATCHER match_cb);
void uv_fs_symlink_MockReset();
typedef int (* OPMOCK_uv_fs_symlink_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, const char * new_path, int flags, uv_fs_cb cb, int calls);
void uv_fs_symlink_MockWithCallback(OPMOCK_uv_fs_symlink_CALLBACK callback);
void uv_fs_symlink_VerifyMock();
void uv_fs_readlink_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_cb);
void uv_fs_readlink_MockReset();
typedef int (* OPMOCK_uv_fs_readlink_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_fs_cb cb, int calls);
void uv_fs_readlink_MockWithCallback(OPMOCK_uv_fs_readlink_CALLBACK callback);
void uv_fs_readlink_VerifyMock();
void uv_fs_fchmod_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, int mode, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_mode, OPMOCK_MATCHER match_cb);
void uv_fs_fchmod_MockReset();
typedef int (* OPMOCK_uv_fs_fchmod_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, int mode, uv_fs_cb cb, int calls);
void uv_fs_fchmod_MockWithCallback(OPMOCK_uv_fs_fchmod_CALLBACK callback);
void uv_fs_fchmod_VerifyMock();
void uv_fs_chown_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_uid_t uid, uv_gid_t gid, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_uid, OPMOCK_MATCHER match_gid, OPMOCK_MATCHER match_cb);
void uv_fs_chown_MockReset();
typedef int (* OPMOCK_uv_fs_chown_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, const char * path, uv_uid_t uid, uv_gid_t gid, uv_fs_cb cb, int calls);
void uv_fs_chown_MockWithCallback(OPMOCK_uv_fs_chown_CALLBACK callback);
void uv_fs_chown_VerifyMock();
void uv_fs_fchown_ExpectAndReturn(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_uid_t uid, uv_gid_t gid, uv_fs_cb cb, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_req, OPMOCK_MATCHER match_file, OPMOCK_MATCHER match_uid, OPMOCK_MATCHER match_gid, OPMOCK_MATCHER match_cb);
void uv_fs_fchown_MockReset();
typedef int (* OPMOCK_uv_fs_fchown_CALLBACK)(uv_loop_t * loop, uv_fs_t * req, uv_file file, uv_uid_t uid, uv_gid_t gid, uv_fs_cb cb, int calls);
void uv_fs_fchown_MockWithCallback(OPMOCK_uv_fs_fchown_CALLBACK callback);
void uv_fs_fchown_VerifyMock();
void uv_fs_poll_init_ExpectAndReturn(uv_loop_t * loop, uv_fs_poll_t * handle, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_handle);
void uv_fs_poll_init_MockReset();
typedef int (* OPMOCK_uv_fs_poll_init_CALLBACK)(uv_loop_t * loop, uv_fs_poll_t * handle, int calls);
void uv_fs_poll_init_MockWithCallback(OPMOCK_uv_fs_poll_init_CALLBACK callback);
void uv_fs_poll_init_VerifyMock();
void uv_fs_poll_start_ExpectAndReturn(uv_fs_poll_t * handle, uv_fs_poll_cb poll_cb, const char * path, unsigned int interval, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_poll_cb, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_interval);
void uv_fs_poll_start_MockReset();
typedef int (* OPMOCK_uv_fs_poll_start_CALLBACK)(uv_fs_poll_t * handle, uv_fs_poll_cb poll_cb, const char * path, unsigned int interval, int calls);
void uv_fs_poll_start_MockWithCallback(OPMOCK_uv_fs_poll_start_CALLBACK callback);
void uv_fs_poll_start_VerifyMock();
void uv_fs_poll_stop_ExpectAndReturn(uv_fs_poll_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_fs_poll_stop_MockReset();
typedef int (* OPMOCK_uv_fs_poll_stop_CALLBACK)(uv_fs_poll_t * handle, int calls);
void uv_fs_poll_stop_MockWithCallback(OPMOCK_uv_fs_poll_stop_CALLBACK callback);
void uv_fs_poll_stop_VerifyMock();
void uv_fs_poll_getpath_ExpectAndReturn(uv_fs_poll_t * handle, char * buf, size_t * len, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_buf, OPMOCK_MATCHER match_len);
void uv_fs_poll_getpath_MockReset();
typedef int (* OPMOCK_uv_fs_poll_getpath_CALLBACK)(uv_fs_poll_t * handle, char * buf, size_t * len, int calls);
void uv_fs_poll_getpath_MockWithCallback(OPMOCK_uv_fs_poll_getpath_CALLBACK callback);
void uv_fs_poll_getpath_VerifyMock();
void uv_signal_init_ExpectAndReturn(uv_loop_t * loop, uv_signal_t * handle, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_handle);
void uv_signal_init_MockReset();
typedef int (* OPMOCK_uv_signal_init_CALLBACK)(uv_loop_t * loop, uv_signal_t * handle, int calls);
void uv_signal_init_MockWithCallback(OPMOCK_uv_signal_init_CALLBACK callback);
void uv_signal_init_VerifyMock();
void uv_signal_start_ExpectAndReturn(uv_signal_t * handle, uv_signal_cb signal_cb, int signum, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_signal_cb, OPMOCK_MATCHER match_signum);
void uv_signal_start_MockReset();
typedef int (* OPMOCK_uv_signal_start_CALLBACK)(uv_signal_t * handle, uv_signal_cb signal_cb, int signum, int calls);
void uv_signal_start_MockWithCallback(OPMOCK_uv_signal_start_CALLBACK callback);
void uv_signal_start_VerifyMock();
void uv_signal_stop_ExpectAndReturn(uv_signal_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_signal_stop_MockReset();
typedef int (* OPMOCK_uv_signal_stop_CALLBACK)(uv_signal_t * handle, int calls);
void uv_signal_stop_MockWithCallback(OPMOCK_uv_signal_stop_CALLBACK callback);
void uv_signal_stop_VerifyMock();
void uv_loadavg_ExpectAndReturn(double  avg [3], OPMOCK_MATCHER match_avg);
void uv_loadavg_MockReset();
typedef void (* OPMOCK_uv_loadavg_CALLBACK)(double  avg [3], int calls);
void uv_loadavg_MockWithCallback(OPMOCK_uv_loadavg_CALLBACK callback);
void uv_loadavg_VerifyMock();
void uv_fs_event_init_ExpectAndReturn(uv_loop_t * loop, uv_fs_event_t * handle, int to_return, OPMOCK_MATCHER match_loop, OPMOCK_MATCHER match_handle);
void uv_fs_event_init_MockReset();
typedef int (* OPMOCK_uv_fs_event_init_CALLBACK)(uv_loop_t * loop, uv_fs_event_t * handle, int calls);
void uv_fs_event_init_MockWithCallback(OPMOCK_uv_fs_event_init_CALLBACK callback);
void uv_fs_event_init_VerifyMock();
void uv_fs_event_start_ExpectAndReturn(uv_fs_event_t * handle, uv_fs_event_cb cb, const char * path, unsigned int flags, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_cb, OPMOCK_MATCHER match_path, OPMOCK_MATCHER match_flags);
void uv_fs_event_start_MockReset();
typedef int (* OPMOCK_uv_fs_event_start_CALLBACK)(uv_fs_event_t * handle, uv_fs_event_cb cb, const char * path, unsigned int flags, int calls);
void uv_fs_event_start_MockWithCallback(OPMOCK_uv_fs_event_start_CALLBACK callback);
void uv_fs_event_start_VerifyMock();
void uv_fs_event_stop_ExpectAndReturn(uv_fs_event_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_fs_event_stop_MockReset();
typedef int (* OPMOCK_uv_fs_event_stop_CALLBACK)(uv_fs_event_t * handle, int calls);
void uv_fs_event_stop_MockWithCallback(OPMOCK_uv_fs_event_stop_CALLBACK callback);
void uv_fs_event_stop_VerifyMock();
void uv_fs_event_getpath_ExpectAndReturn(uv_fs_event_t * handle, char * buf, size_t * len, int to_return, OPMOCK_MATCHER match_handle, OPMOCK_MATCHER match_buf, OPMOCK_MATCHER match_len);
void uv_fs_event_getpath_MockReset();
typedef int (* OPMOCK_uv_fs_event_getpath_CALLBACK)(uv_fs_event_t * handle, char * buf, size_t * len, int calls);
void uv_fs_event_getpath_MockWithCallback(OPMOCK_uv_fs_event_getpath_CALLBACK callback);
void uv_fs_event_getpath_VerifyMock();
void uv_ip4_addr_ExpectAndReturn(const char * ip, int port, struct sockaddr_in * addr, int to_return, OPMOCK_MATCHER match_ip, OPMOCK_MATCHER match_port, OPMOCK_MATCHER match_addr);
void uv_ip4_addr_MockReset();
typedef int (* OPMOCK_uv_ip4_addr_CALLBACK)(const char * ip, int port, struct sockaddr_in * addr, int calls);
void uv_ip4_addr_MockWithCallback(OPMOCK_uv_ip4_addr_CALLBACK callback);
void uv_ip4_addr_VerifyMock();
void uv_ip6_addr_ExpectAndReturn(const char * ip, int port, struct sockaddr_in6 * addr, int to_return, OPMOCK_MATCHER match_ip, OPMOCK_MATCHER match_port, OPMOCK_MATCHER match_addr);
void uv_ip6_addr_MockReset();
typedef int (* OPMOCK_uv_ip6_addr_CALLBACK)(const char * ip, int port, struct sockaddr_in6 * addr, int calls);
void uv_ip6_addr_MockWithCallback(OPMOCK_uv_ip6_addr_CALLBACK callback);
void uv_ip6_addr_VerifyMock();
void uv_ip4_name_ExpectAndReturn(const struct sockaddr_in * src, char * dst, size_t size, int to_return, OPMOCK_MATCHER match_src, OPMOCK_MATCHER match_dst, OPMOCK_MATCHER match_size);
void uv_ip4_name_MockReset();
typedef int (* OPMOCK_uv_ip4_name_CALLBACK)(const struct sockaddr_in * src, char * dst, size_t size, int calls);
void uv_ip4_name_MockWithCallback(OPMOCK_uv_ip4_name_CALLBACK callback);
void uv_ip4_name_VerifyMock();
void uv_ip6_name_ExpectAndReturn(const struct sockaddr_in6 * src, char * dst, size_t size, int to_return, OPMOCK_MATCHER match_src, OPMOCK_MATCHER match_dst, OPMOCK_MATCHER match_size);
void uv_ip6_name_MockReset();
typedef int (* OPMOCK_uv_ip6_name_CALLBACK)(const struct sockaddr_in6 * src, char * dst, size_t size, int calls);
void uv_ip6_name_MockWithCallback(OPMOCK_uv_ip6_name_CALLBACK callback);
void uv_ip6_name_VerifyMock();
void uv_inet_ntop_ExpectAndReturn(int af, const void * src, char * dst, size_t size, int to_return, OPMOCK_MATCHER match_af, OPMOCK_MATCHER match_src, OPMOCK_MATCHER match_dst, OPMOCK_MATCHER match_size);
void uv_inet_ntop_MockReset();
typedef int (* OPMOCK_uv_inet_ntop_CALLBACK)(int af, const void * src, char * dst, size_t size, int calls);
void uv_inet_ntop_MockWithCallback(OPMOCK_uv_inet_ntop_CALLBACK callback);
void uv_inet_ntop_VerifyMock();
void uv_inet_pton_ExpectAndReturn(int af, const char * src, void * dst, int to_return, OPMOCK_MATCHER match_af, OPMOCK_MATCHER match_src, OPMOCK_MATCHER match_dst);
void uv_inet_pton_MockReset();
typedef int (* OPMOCK_uv_inet_pton_CALLBACK)(int af, const char * src, void * dst, int calls);
void uv_inet_pton_MockWithCallback(OPMOCK_uv_inet_pton_CALLBACK callback);
void uv_inet_pton_VerifyMock();
void uv_exepath_ExpectAndReturn(char * buffer, size_t * size, int to_return, OPMOCK_MATCHER match_buffer, OPMOCK_MATCHER match_size);
void uv_exepath_MockReset();
typedef int (* OPMOCK_uv_exepath_CALLBACK)(char * buffer, size_t * size, int calls);
void uv_exepath_MockWithCallback(OPMOCK_uv_exepath_CALLBACK callback);
void uv_exepath_VerifyMock();
void uv_cwd_ExpectAndReturn(char * buffer, size_t * size, int to_return, OPMOCK_MATCHER match_buffer, OPMOCK_MATCHER match_size);
void uv_cwd_MockReset();
typedef int (* OPMOCK_uv_cwd_CALLBACK)(char * buffer, size_t * size, int calls);
void uv_cwd_MockWithCallback(OPMOCK_uv_cwd_CALLBACK callback);
void uv_cwd_VerifyMock();
void uv_chdir_ExpectAndReturn(const char * dir, int to_return, OPMOCK_MATCHER match_dir);
void uv_chdir_MockReset();
typedef int (* OPMOCK_uv_chdir_CALLBACK)(const char * dir, int calls);
void uv_chdir_MockWithCallback(OPMOCK_uv_chdir_CALLBACK callback);
void uv_chdir_VerifyMock();
void uv_get_free_memory_ExpectAndReturn(uint64_t to_return);
void uv_get_free_memory_MockReset();
typedef uint64_t (* OPMOCK_uv_get_free_memory_CALLBACK)(int calls);
void uv_get_free_memory_MockWithCallback(OPMOCK_uv_get_free_memory_CALLBACK callback);
void uv_get_free_memory_VerifyMock();
void uv_get_total_memory_ExpectAndReturn(uint64_t to_return);
void uv_get_total_memory_MockReset();
typedef uint64_t (* OPMOCK_uv_get_total_memory_CALLBACK)(int calls);
void uv_get_total_memory_MockWithCallback(OPMOCK_uv_get_total_memory_CALLBACK callback);
void uv_get_total_memory_VerifyMock();
void uv_hrtime_ExpectAndReturn(uint64_t to_return);
void uv_hrtime_MockReset();
typedef uint64_t (* OPMOCK_uv_hrtime_CALLBACK)(int calls);
void uv_hrtime_MockWithCallback(OPMOCK_uv_hrtime_CALLBACK callback);
void uv_hrtime_VerifyMock();
void uv_disable_stdio_inheritance_ExpectAndReturn();
void uv_disable_stdio_inheritance_MockReset();
typedef void (* OPMOCK_uv_disable_stdio_inheritance_CALLBACK)(int calls);
void uv_disable_stdio_inheritance_MockWithCallback(OPMOCK_uv_disable_stdio_inheritance_CALLBACK callback);
void uv_disable_stdio_inheritance_VerifyMock();
void uv_dlopen_ExpectAndReturn(const char * filename, uv_lib_t * lib, int to_return, OPMOCK_MATCHER match_filename, OPMOCK_MATCHER match_lib);
void uv_dlopen_MockReset();
typedef int (* OPMOCK_uv_dlopen_CALLBACK)(const char * filename, uv_lib_t * lib, int calls);
void uv_dlopen_MockWithCallback(OPMOCK_uv_dlopen_CALLBACK callback);
void uv_dlopen_VerifyMock();
void uv_dlclose_ExpectAndReturn(uv_lib_t * lib, OPMOCK_MATCHER match_lib);
void uv_dlclose_MockReset();
typedef void (* OPMOCK_uv_dlclose_CALLBACK)(uv_lib_t * lib, int calls);
void uv_dlclose_MockWithCallback(OPMOCK_uv_dlclose_CALLBACK callback);
void uv_dlclose_VerifyMock();
void uv_dlsym_ExpectAndReturn(uv_lib_t * lib, const char * name, void ** ptr, int to_return, OPMOCK_MATCHER match_lib, OPMOCK_MATCHER match_name, OPMOCK_MATCHER match_ptr);
void uv_dlsym_MockReset();
typedef int (* OPMOCK_uv_dlsym_CALLBACK)(uv_lib_t * lib, const char * name, void ** ptr, int calls);
void uv_dlsym_MockWithCallback(OPMOCK_uv_dlsym_CALLBACK callback);
void uv_dlsym_VerifyMock();
void uv_dlerror_ExpectAndReturn(const uv_lib_t * lib, const char * to_return, OPMOCK_MATCHER match_lib);
void uv_dlerror_MockReset();
typedef const char * (* OPMOCK_uv_dlerror_CALLBACK)(const uv_lib_t * lib, int calls);
void uv_dlerror_MockWithCallback(OPMOCK_uv_dlerror_CALLBACK callback);
void uv_dlerror_VerifyMock();
void uv_mutex_init_ExpectAndReturn(uv_mutex_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_mutex_init_MockReset();
typedef int (* OPMOCK_uv_mutex_init_CALLBACK)(uv_mutex_t * handle, int calls);
void uv_mutex_init_MockWithCallback(OPMOCK_uv_mutex_init_CALLBACK callback);
void uv_mutex_init_VerifyMock();
void uv_mutex_destroy_ExpectAndReturn(uv_mutex_t * handle, OPMOCK_MATCHER match_handle);
void uv_mutex_destroy_MockReset();
typedef void (* OPMOCK_uv_mutex_destroy_CALLBACK)(uv_mutex_t * handle, int calls);
void uv_mutex_destroy_MockWithCallback(OPMOCK_uv_mutex_destroy_CALLBACK callback);
void uv_mutex_destroy_VerifyMock();
void uv_mutex_lock_ExpectAndReturn(uv_mutex_t * handle, OPMOCK_MATCHER match_handle);
void uv_mutex_lock_MockReset();
typedef void (* OPMOCK_uv_mutex_lock_CALLBACK)(uv_mutex_t * handle, int calls);
void uv_mutex_lock_MockWithCallback(OPMOCK_uv_mutex_lock_CALLBACK callback);
void uv_mutex_lock_VerifyMock();
void uv_mutex_trylock_ExpectAndReturn(uv_mutex_t * handle, int to_return, OPMOCK_MATCHER match_handle);
void uv_mutex_trylock_MockReset();
typedef int (* OPMOCK_uv_mutex_trylock_CALLBACK)(uv_mutex_t * handle, int calls);
void uv_mutex_trylock_MockWithCallback(OPMOCK_uv_mutex_trylock_CALLBACK callback);
void uv_mutex_trylock_VerifyMock();
void uv_mutex_unlock_ExpectAndReturn(uv_mutex_t * handle, OPMOCK_MATCHER match_handle);
void uv_mutex_unlock_MockReset();
typedef void (* OPMOCK_uv_mutex_unlock_CALLBACK)(uv_mutex_t * handle, int calls);
void uv_mutex_unlock_MockWithCallback(OPMOCK_uv_mutex_unlock_CALLBACK callback);
void uv_mutex_unlock_VerifyMock();
void uv_rwlock_init_ExpectAndReturn(uv_rwlock_t * rwlock, int to_return, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_init_MockReset();
typedef int (* OPMOCK_uv_rwlock_init_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_init_MockWithCallback(OPMOCK_uv_rwlock_init_CALLBACK callback);
void uv_rwlock_init_VerifyMock();
void uv_rwlock_destroy_ExpectAndReturn(uv_rwlock_t * rwlock, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_destroy_MockReset();
typedef void (* OPMOCK_uv_rwlock_destroy_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_destroy_MockWithCallback(OPMOCK_uv_rwlock_destroy_CALLBACK callback);
void uv_rwlock_destroy_VerifyMock();
void uv_rwlock_rdlock_ExpectAndReturn(uv_rwlock_t * rwlock, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_rdlock_MockReset();
typedef void (* OPMOCK_uv_rwlock_rdlock_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_rdlock_MockWithCallback(OPMOCK_uv_rwlock_rdlock_CALLBACK callback);
void uv_rwlock_rdlock_VerifyMock();
void uv_rwlock_tryrdlock_ExpectAndReturn(uv_rwlock_t * rwlock, int to_return, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_tryrdlock_MockReset();
typedef int (* OPMOCK_uv_rwlock_tryrdlock_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_tryrdlock_MockWithCallback(OPMOCK_uv_rwlock_tryrdlock_CALLBACK callback);
void uv_rwlock_tryrdlock_VerifyMock();
void uv_rwlock_rdunlock_ExpectAndReturn(uv_rwlock_t * rwlock, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_rdunlock_MockReset();
typedef void (* OPMOCK_uv_rwlock_rdunlock_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_rdunlock_MockWithCallback(OPMOCK_uv_rwlock_rdunlock_CALLBACK callback);
void uv_rwlock_rdunlock_VerifyMock();
void uv_rwlock_wrlock_ExpectAndReturn(uv_rwlock_t * rwlock, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_wrlock_MockReset();
typedef void (* OPMOCK_uv_rwlock_wrlock_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_wrlock_MockWithCallback(OPMOCK_uv_rwlock_wrlock_CALLBACK callback);
void uv_rwlock_wrlock_VerifyMock();
void uv_rwlock_trywrlock_ExpectAndReturn(uv_rwlock_t * rwlock, int to_return, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_trywrlock_MockReset();
typedef int (* OPMOCK_uv_rwlock_trywrlock_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_trywrlock_MockWithCallback(OPMOCK_uv_rwlock_trywrlock_CALLBACK callback);
void uv_rwlock_trywrlock_VerifyMock();
void uv_rwlock_wrunlock_ExpectAndReturn(uv_rwlock_t * rwlock, OPMOCK_MATCHER match_rwlock);
void uv_rwlock_wrunlock_MockReset();
typedef void (* OPMOCK_uv_rwlock_wrunlock_CALLBACK)(uv_rwlock_t * rwlock, int calls);
void uv_rwlock_wrunlock_MockWithCallback(OPMOCK_uv_rwlock_wrunlock_CALLBACK callback);
void uv_rwlock_wrunlock_VerifyMock();
void uv_sem_init_ExpectAndReturn(uv_sem_t * sem, unsigned int value, int to_return, OPMOCK_MATCHER match_sem, OPMOCK_MATCHER match_value);
void uv_sem_init_MockReset();
typedef int (* OPMOCK_uv_sem_init_CALLBACK)(uv_sem_t * sem, unsigned int value, int calls);
void uv_sem_init_MockWithCallback(OPMOCK_uv_sem_init_CALLBACK callback);
void uv_sem_init_VerifyMock();
void uv_sem_destroy_ExpectAndReturn(uv_sem_t * sem, OPMOCK_MATCHER match_sem);
void uv_sem_destroy_MockReset();
typedef void (* OPMOCK_uv_sem_destroy_CALLBACK)(uv_sem_t * sem, int calls);
void uv_sem_destroy_MockWithCallback(OPMOCK_uv_sem_destroy_CALLBACK callback);
void uv_sem_destroy_VerifyMock();
void uv_sem_post_ExpectAndReturn(uv_sem_t * sem, OPMOCK_MATCHER match_sem);
void uv_sem_post_MockReset();
typedef void (* OPMOCK_uv_sem_post_CALLBACK)(uv_sem_t * sem, int calls);
void uv_sem_post_MockWithCallback(OPMOCK_uv_sem_post_CALLBACK callback);
void uv_sem_post_VerifyMock();
void uv_sem_wait_ExpectAndReturn(uv_sem_t * sem, OPMOCK_MATCHER match_sem);
void uv_sem_wait_MockReset();
typedef void (* OPMOCK_uv_sem_wait_CALLBACK)(uv_sem_t * sem, int calls);
void uv_sem_wait_MockWithCallback(OPMOCK_uv_sem_wait_CALLBACK callback);
void uv_sem_wait_VerifyMock();
void uv_sem_trywait_ExpectAndReturn(uv_sem_t * sem, int to_return, OPMOCK_MATCHER match_sem);
void uv_sem_trywait_MockReset();
typedef int (* OPMOCK_uv_sem_trywait_CALLBACK)(uv_sem_t * sem, int calls);
void uv_sem_trywait_MockWithCallback(OPMOCK_uv_sem_trywait_CALLBACK callback);
void uv_sem_trywait_VerifyMock();
void uv_cond_init_ExpectAndReturn(uv_cond_t * cond, int to_return, OPMOCK_MATCHER match_cond);
void uv_cond_init_MockReset();
typedef int (* OPMOCK_uv_cond_init_CALLBACK)(uv_cond_t * cond, int calls);
void uv_cond_init_MockWithCallback(OPMOCK_uv_cond_init_CALLBACK callback);
void uv_cond_init_VerifyMock();
void uv_cond_destroy_ExpectAndReturn(uv_cond_t * cond, OPMOCK_MATCHER match_cond);
void uv_cond_destroy_MockReset();
typedef void (* OPMOCK_uv_cond_destroy_CALLBACK)(uv_cond_t * cond, int calls);
void uv_cond_destroy_MockWithCallback(OPMOCK_uv_cond_destroy_CALLBACK callback);
void uv_cond_destroy_VerifyMock();
void uv_cond_signal_ExpectAndReturn(uv_cond_t * cond, OPMOCK_MATCHER match_cond);
void uv_cond_signal_MockReset();
typedef void (* OPMOCK_uv_cond_signal_CALLBACK)(uv_cond_t * cond, int calls);
void uv_cond_signal_MockWithCallback(OPMOCK_uv_cond_signal_CALLBACK callback);
void uv_cond_signal_VerifyMock();
void uv_cond_broadcast_ExpectAndReturn(uv_cond_t * cond, OPMOCK_MATCHER match_cond);
void uv_cond_broadcast_MockReset();
typedef void (* OPMOCK_uv_cond_broadcast_CALLBACK)(uv_cond_t * cond, int calls);
void uv_cond_broadcast_MockWithCallback(OPMOCK_uv_cond_broadcast_CALLBACK callback);
void uv_cond_broadcast_VerifyMock();
void uv_barrier_init_ExpectAndReturn(uv_barrier_t * barrier, unsigned int count, int to_return, OPMOCK_MATCHER match_barrier, OPMOCK_MATCHER match_count);
void uv_barrier_init_MockReset();
typedef int (* OPMOCK_uv_barrier_init_CALLBACK)(uv_barrier_t * barrier, unsigned int count, int calls);
void uv_barrier_init_MockWithCallback(OPMOCK_uv_barrier_init_CALLBACK callback);
void uv_barrier_init_VerifyMock();
void uv_barrier_destroy_ExpectAndReturn(uv_barrier_t * barrier, OPMOCK_MATCHER match_barrier);
void uv_barrier_destroy_MockReset();
typedef void (* OPMOCK_uv_barrier_destroy_CALLBACK)(uv_barrier_t * barrier, int calls);
void uv_barrier_destroy_MockWithCallback(OPMOCK_uv_barrier_destroy_CALLBACK callback);
void uv_barrier_destroy_VerifyMock();
void uv_barrier_wait_ExpectAndReturn(uv_barrier_t * barrier, int to_return, OPMOCK_MATCHER match_barrier);
void uv_barrier_wait_MockReset();
typedef int (* OPMOCK_uv_barrier_wait_CALLBACK)(uv_barrier_t * barrier, int calls);
void uv_barrier_wait_MockWithCallback(OPMOCK_uv_barrier_wait_CALLBACK callback);
void uv_barrier_wait_VerifyMock();
void uv_cond_wait_ExpectAndReturn(uv_cond_t * cond, uv_mutex_t * mutex, OPMOCK_MATCHER match_cond, OPMOCK_MATCHER match_mutex);
void uv_cond_wait_MockReset();
typedef void (* OPMOCK_uv_cond_wait_CALLBACK)(uv_cond_t * cond, uv_mutex_t * mutex, int calls);
void uv_cond_wait_MockWithCallback(OPMOCK_uv_cond_wait_CALLBACK callback);
void uv_cond_wait_VerifyMock();
void uv_cond_timedwait_ExpectAndReturn(uv_cond_t * cond, uv_mutex_t * mutex, uint64_t timeout, int to_return, OPMOCK_MATCHER match_cond, OPMOCK_MATCHER match_mutex, OPMOCK_MATCHER match_timeout);
void uv_cond_timedwait_MockReset();
typedef int (* OPMOCK_uv_cond_timedwait_CALLBACK)(uv_cond_t * cond, uv_mutex_t * mutex, uint64_t timeout, int calls);
void uv_cond_timedwait_MockWithCallback(OPMOCK_uv_cond_timedwait_CALLBACK callback);
void uv_cond_timedwait_VerifyMock();
void uv_once_ExpectAndReturn(uv_once_t * guard, void (* callback )(void), OPMOCK_MATCHER match_guard, OPMOCK_MATCHER match_callback);
void uv_once_MockReset();
typedef void (* OPMOCK_uv_once_CALLBACK)(uv_once_t * guard, void (* callback )(void), int calls);
void uv_once_MockWithCallback(OPMOCK_uv_once_CALLBACK callback);
void uv_once_VerifyMock();
void uv_key_create_ExpectAndReturn(uv_key_t * key, int to_return, OPMOCK_MATCHER match_key);
void uv_key_create_MockReset();
typedef int (* OPMOCK_uv_key_create_CALLBACK)(uv_key_t * key, int calls);
void uv_key_create_MockWithCallback(OPMOCK_uv_key_create_CALLBACK callback);
void uv_key_create_VerifyMock();
void uv_key_delete_ExpectAndReturn(uv_key_t * key, OPMOCK_MATCHER match_key);
void uv_key_delete_MockReset();
typedef void (* OPMOCK_uv_key_delete_CALLBACK)(uv_key_t * key, int calls);
void uv_key_delete_MockWithCallback(OPMOCK_uv_key_delete_CALLBACK callback);
void uv_key_delete_VerifyMock();
void uv_key_get_ExpectAndReturn(uv_key_t * key, void * to_return, OPMOCK_MATCHER match_key);
void uv_key_get_MockReset();
typedef void * (* OPMOCK_uv_key_get_CALLBACK)(uv_key_t * key, int calls);
void uv_key_get_MockWithCallback(OPMOCK_uv_key_get_CALLBACK callback);
void uv_key_get_VerifyMock();
void uv_key_set_ExpectAndReturn(uv_key_t * key, void * value, OPMOCK_MATCHER match_key, OPMOCK_MATCHER match_value);
void uv_key_set_MockReset();
typedef void (* OPMOCK_uv_key_set_CALLBACK)(uv_key_t * key, void * value, int calls);
void uv_key_set_MockWithCallback(OPMOCK_uv_key_set_CALLBACK callback);
void uv_key_set_VerifyMock();
void uv_thread_create_ExpectAndReturn(uv_thread_t * tid, uv_thread_cb entry, void * arg, int to_return, OPMOCK_MATCHER match_tid, OPMOCK_MATCHER match_entry, OPMOCK_MATCHER match_arg);
void uv_thread_create_MockReset();
typedef int (* OPMOCK_uv_thread_create_CALLBACK)(uv_thread_t * tid, uv_thread_cb entry, void * arg, int calls);
void uv_thread_create_MockWithCallback(OPMOCK_uv_thread_create_CALLBACK callback);
void uv_thread_create_VerifyMock();
void uv_thread_self_ExpectAndReturn(uv_thread_t to_return);
void uv_thread_self_MockReset();
typedef uv_thread_t (* OPMOCK_uv_thread_self_CALLBACK)(int calls);
void uv_thread_self_MockWithCallback(OPMOCK_uv_thread_self_CALLBACK callback);
void uv_thread_self_VerifyMock();
void uv_thread_join_ExpectAndReturn(uv_thread_t * tid, int to_return, OPMOCK_MATCHER match_tid);
void uv_thread_join_MockReset();
typedef int (* OPMOCK_uv_thread_join_CALLBACK)(uv_thread_t * tid, int calls);
void uv_thread_join_MockWithCallback(OPMOCK_uv_thread_join_CALLBACK callback);
void uv_thread_join_VerifyMock();
void uv_thread_equal_ExpectAndReturn(const uv_thread_t * t1, const uv_thread_t * t2, int to_return, OPMOCK_MATCHER match_t1, OPMOCK_MATCHER match_t2);
void uv_thread_equal_MockReset();
typedef int (* OPMOCK_uv_thread_equal_CALLBACK)(const uv_thread_t * t1, const uv_thread_t * t2, int calls);
void uv_thread_equal_MockWithCallback(OPMOCK_uv_thread_equal_CALLBACK callback);
void uv_thread_equal_VerifyMock();

#ifdef __cplusplus
}
#endif
#endif
